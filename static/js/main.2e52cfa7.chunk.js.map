{"version":3,"sources":["Lib/tga.js","Components/RecordListItem.tsx","Components/RecordList.tsx","Components/DataLoading.tsx","Components/NavbarComponent.tsx","Components/PageControl.tsx","Services/Api.ts","Services/DataManagerService.ts","Components/KeyValue.tsx","Services/SpriteRendererService.ts","Components/ObjectRecord.tsx","Components/App.tsx","registerServiceWorker.ts","index.tsx"],"names":["_global","Targa","getImageData8bits","imageData","indexes","colormap","width","y_start","y_step","y_end","x_start","x_step","x_end","color","i","x","y","getImageData16bits","pixels","getImageData24bits","getImageData32bits","getImageDataGrey8bits","getImageDataGrey16bits","Type","NO_DATA","INDEXED","RGB","GREY","RLE_INDEXED","RLE_RGB","RLE_GREY","Origin","BOTTOM_LEFT","BOTTOM_RIGHT","TOP_LEFT","TOP_RIGHT","SHIFT","MASK","prototype","open","path","callback","req","tga","this","XMLHttpRequest","responseType","onload","status","load","Uint8Array","response","call","send","data","offset","length","Error","header","idLength","colorMapType","imageType","colorMapIndex","colorMapLength","colorMapDepth","offsetX","offsetY","height","pixelDepth","flags","hasEncoding","hasColorMap","isGreyColor","checkHeader","colorMapSize","palette","subarray","pixelSize","imageSize","pixelTotal","outputSize","pos","c","count","output","set","decodeRLE","getImageData","origin","document","createElement","getContext","createImageData","Uint8ClampedArray","getCanvas","canvas","ctx","putImageData","getDataURL","type","toDataURL","shim","exports","TGA","_super","RecordListItem","_this","apply","arguments","getClass","active","render","fontawesome_svg_core_index_es","add","free_solid_svg_icons_index_es","react","onClick","props","onSelected","objectRecord","scope","id","description","containable","String","containSize","index_es","icon","title","size","className","foodValue","clothing","rideable","permanent","tslib_es6","RecordList","Row","Table","striped","dark","hover","Object","values","sort","lhs","rhs","map","Components_RecordListItem","key","onObjectSelected","DataLoading","bgColor","progress","percent","getProgress","Container","Col","Alert","message","Progress","value","animated","NavbarComponent","onSearchSubmit","event","preventDefault","FormData","target","onSearch","get","setState","prevState","filter","href","onSubmit","name","placeholder","aria-label","PageControl","isFirstPage","currentPage","isSecondPage","isLastPage","pageCount","isSecondLastPage","getMiddleNumber","renderPage","page","PaginationItem","PaginationLink","changePage","renderDots","disabled","xs","Pagination","previous","next","Services_Api","Api","baseUrl","getRecords","undefined","Promise","jquery","_a","sent","Services_DataManagerService","DataManagerService","initialize","onProgress","done","_b","outdated","records","waitForUpdate","sleep","ms","resolve","setTimeout","KeyValue","keyStr","JSON","stringify","tgaLib","__webpack_require__","Services_SpriteRendererService","SpriteRendererService","imgUrl","sprites","canvasId","context","spritePromises","push","all","spriteCanvases","spriteInfos","index","sprite","addSprite","reject","catch","err","getPosition","drawImage","position","ObjectRecord","mainCanvasId","toString","renderSpriteInfo","md","lg","Components_KeyValue","parent","Button","close","componentDidMount","Components_App","App","state","objectRecords","selectedRecord","filteredCount","itemsPerPage","onLoadingProgress","onLoadingDone","keys","getFilteredObjects","object","stringContains","slice","getPageControlProps","Math","ceil","onChangePage","showLoading","newPage","onObjectClosed","renderTabel","Components_RecordList","Components_PageControl","renderObjectRecord","Components_ObjectRecord","Components_NavbarComponent","role","Components_DataLoading","source","substr","toLowerCase","indexOf","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","error","react_dom","getElementById","URL","addEventListener","fetch","headers","ready","unregister","reload","checkValidServiceWorker"],"mappings":"sIA6BA,SAAUA,GAET,aAOA,SAASC,KAuIT,SAASC,EAAkBC,EAAWC,EAASC,EAAUC,EAAOC,EAASC,EAAQC,EAAOC,EAASC,EAAQC,GAExG,IAAIC,EAAOC,EAAGC,EAAGC,EAEjB,IAAKF,EAAI,EAAGE,EAAIT,EAASS,IAAMP,EAAOO,GAAKR,EAC1C,IAAKO,EAAIL,EAASK,IAAMH,EAAOG,GAAKJ,EAAQG,IAC3CD,EAAQT,EAAQU,GAChBX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAK,IACrCb,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKX,EAAkB,EAARQ,EAAa,GAC5DV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKX,EAAkB,EAARQ,EAAa,GAC5DV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKX,EAAkB,EAARQ,EAAa,GAI9D,OAAOV,EAmBR,SAASc,EAAmBd,EAAWe,EAAQb,EAAUC,EAAOC,EAASC,EAAQC,EAAOC,EAASC,EAAQC,GAExG,IAAIC,EAAOC,EAAGC,EAAGC,EAEjB,IAAKF,EAAI,EAAGE,EAAIT,EAASS,IAAMP,EAAOO,GAAKR,EAC1C,IAAKO,EAAIL,EAASK,IAAMH,EAAOG,GAAKJ,EAAQG,GAAK,EAChDD,EAAQK,EAAOJ,EAAI,GAAMI,EAAOJ,EAAI,IAAM,EAC1CX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,IAAc,MAARH,IAAmB,EACzDV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,IAAc,IAARH,IAAmB,EACzDV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,IAAc,GAARH,IAAmB,EACzDV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAc,MAARH,EAAkB,EAAI,IAI9D,OAAOV,EAmBR,SAASgB,EAAmBhB,EAAWe,EAAQb,EAAUC,EAAOC,EAASC,EAAQC,EAAOC,EAASC,EAAQC,GAExG,IAAIE,EAAGC,EAAGC,EAEV,IAAKF,EAAI,EAAGE,EAAIT,EAASS,IAAMP,EAAOO,GAAKR,EAC1C,IAAKO,EAAIL,EAASK,IAAMH,EAAOG,GAAKJ,EAAQG,GAAK,EAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAK,IACrCb,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAIlD,OAAOX,EAmBR,SAASiB,EAAmBjB,EAAWe,EAAQb,EAAUC,EAAOC,EAASC,EAAQC,EAAOC,EAASC,EAAQC,GAExG,IAAIE,EAAGC,EAAGC,EAEV,IAAKF,EAAI,EAAGE,EAAIT,EAASS,IAAMP,EAAOO,GAAKR,EAC1C,IAAKO,EAAIL,EAASK,IAAMH,EAAOG,GAAKJ,EAAQG,GAAK,EAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAIlD,OAAOX,EAmBR,SAASkB,EAAsBlB,EAAWe,EAAQb,EAAUC,EAAOC,EAASC,EAAQC,EAAOC,EAASC,EAAQC,GAE3G,IAAIC,EAAOC,EAAGC,EAAGC,EAEjB,IAAKF,EAAI,EAAGE,EAAIT,EAASS,IAAMP,EAAOO,GAAKR,EAC1C,IAAKO,EAAIL,EAASK,IAAMH,EAAOG,GAAKJ,EAAQG,IAC3CD,EAAQK,EAAOJ,GACfX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKH,EACrCV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKH,EACrCV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKH,EACrCV,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAK,IAIvC,OAAOb,EAmBR,SAASmB,EAAuBnB,EAAWe,EAAQb,EAAUC,EAAOC,EAASC,EAAQC,EAAOC,EAASC,EAAQC,GAE5G,IAAIE,EAAGC,EAAGC,EAEV,IAAKF,EAAI,EAAGE,EAAIT,EAASS,IAAMP,EAAOO,GAAKR,EAC1C,IAAKO,EAAIL,EAASK,IAAMH,EAAOG,GAAKJ,EAAQG,GAAK,EAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAChDX,EAA4B,GAAjBY,EAAIT,EAAQU,GAAS,GAAKE,EAAOJ,EAAI,GAIlD,OAAOX,EA/SRF,EAAMsB,KAAO,CACZC,QAAc,EACdC,QAAc,EACdC,IAAc,EACdC,KAAc,EACdC,YAAc,EACdC,QAAa,GACbC,SAAa,IAOd7B,EAAM8B,OAAS,CACdC,YAAc,EACdC,aAAc,EACdC,SAAc,EACdC,UAAc,EACdC,MAAc,EACdC,KAAc,IAqSfpC,EAAMqC,UAAUC,KAAO,SAAmBC,EAAMC,GAE/C,IAAIC,EAAKC,EAAMC,MACfF,EAAM,IAAIG,gBACNN,KAAK,MAAOC,GAAM,GACtBE,EAAII,aAAe,cACnBJ,EAAIK,OAAS,WACQ,MAAhBH,KAAKI,SACRL,EAAIM,KAAK,IAAIC,WAAWR,EAAIS,WACxBV,GACHA,EAASW,KAAKT,KAIjBD,EAAIW,KAAK,OASVpD,EAAMqC,UAAUW,KAAO,SAAoBK,GAE1C,IAAIC,EAAS,EAGb,GAAID,EAAKE,OAAS,GACjB,MAAM,IAAIC,MAAM,qDA6BjB,GAzBAb,KAAKc,OAAS,CACKC,SAAgBL,EAAKC,KACrBK,aAAgBN,EAAKC,KACrBM,UAAgBP,EAAKC,KACrBO,cAAgBR,EAAKC,KAAYD,EAAKC,MAAa,EACnDQ,eAAgBT,EAAKC,KAAYD,EAAKC,MAAa,EACnDS,cAAgBV,EAAKC,KACrBU,QAAgBX,EAAKC,KAAYD,EAAKC,MAAa,EACnDW,QAAgBZ,EAAKC,KAAYD,EAAKC,MAAa,EACnDjD,MAAgBgD,EAAKC,KAAYD,EAAKC,MAAa,EACnDY,OAAgBb,EAAKC,KAAYD,EAAKC,MAAa,EACnDa,WAAgBd,EAAKC,KACrBc,MAAgBf,EAAKC,MAIxCX,KAAKc,OAAOY,YAAe1B,KAAKc,OAAOG,YAAc5D,EAAMsB,KAAKK,aAAegB,KAAKc,OAAOG,YAAc5D,EAAMsB,KAAKM,SAAae,KAAKc,OAAOG,YAAc5D,EAAMsB,KAAKO,SACtKc,KAAKc,OAAOa,YAAe3B,KAAKc,OAAOG,YAAc5D,EAAMsB,KAAKK,aAAegB,KAAKc,OAAOG,YAAc5D,EAAMsB,KAAKE,QACpHmB,KAAKc,OAAOc,YAAe5B,KAAKc,OAAOG,YAAc5D,EAAMsB,KAAKO,UAAec,KAAKc,OAAOG,YAAc5D,EAAMsB,KAAKI,KA9UrH,SAAsB+B,GAGrB,GAAIA,EAAOG,YAAc5D,EAAMsB,KAAKC,QACnC,MAAM,IAAIiC,MAAM,kCAIjB,GAAIC,EAAOa,aACV,GAAIb,EAAOK,eAAiB,KAAgC,KAAzBL,EAAOM,eAAgD,IAAxBN,EAAOE,aACxE,MAAM,IAAIH,MAAM,iEAIjB,GAAIC,EAAOE,aACV,MAAM,IAAIH,MAAM,iEAKlB,GAAIC,EAAOpD,OAAS,GAAKoD,EAAOS,QAAU,EACzC,MAAM,IAAIV,MAAM,6CAIjB,GAA0B,IAAtBC,EAAOU,YACe,KAAtBV,EAAOU,YACe,KAAtBV,EAAOU,YACe,KAAtBV,EAAOU,WACV,MAAM,IAAIX,MAAM,8CAAgDC,EAAOU,WAAa,KAoTrFK,CAAY7B,KAAKc,SAGjBH,GAAUX,KAAKc,OAAOC,WACRL,EAAKE,OAClB,MAAM,IAAIC,MAAM,2BAIjB,GAAIb,KAAKc,OAAOa,YAAa,CAC5B,IAAIG,EAAgB9B,KAAKc,OAAOK,gBAAkBnB,KAAKc,OAAOM,eAAiB,GAC/EpB,KAAK+B,QAAerB,EAAKsB,SAAUrB,EAAQA,EAASmB,GACpDnB,GAAoBmB,EAGrB,IAAIG,EAAajC,KAAKc,OAAOU,YAAc,EACvCU,EAAalC,KAAKc,OAAOpD,MAAQsC,KAAKc,OAAOS,OAC7CY,EAAaD,EAAYD,EAGzBjC,KAAKc,OAAOY,YACf1B,KAAKzC,UA5TP,SAAoBmD,EAAMC,EAAQsB,EAAWG,GAE5C,IAAIC,EAAKC,EAAGC,EAAOrE,EACfI,EAAQkE,EAMZ,IAJAA,EAAS,IAAIlC,WAAW8B,GACxB9D,EAAS,IAAIgC,WAAW2B,GACxBI,EAAS,EAEFA,EAAMD,GAKZ,GAHAG,EAAqB,GAAR,KADbD,EAAQ5B,EAAKC,OAIL,IAAJ2B,EAAU,CAEb,IAAKpE,EAAI,EAAGA,EAAI+D,IAAa/D,EAC5BI,EAAOJ,GAAKwC,EAAKC,KAIlB,IAAKzC,EAAI,EAAGA,EAAIqE,IAASrE,EACxBsE,EAAOC,IAAInE,EAAQ+D,GACnBA,GAAOJ,OAOR,IADAM,GAASN,EACJ/D,EAAI,EAAGA,EAAIqE,IAASrE,EACxBsE,EAAOH,KAAS3B,EAAKC,KAKxB,OAAO6B,EAwRWE,CAAUhC,EAAMC,EAAQsB,EAAWE,GAKpDnC,KAAKzC,UAAYmD,EAAKsB,SAAUrB,EAAQA,GAAUX,KAAKc,OAAOa,YAAcO,EAAYC,KAW1F9E,EAAMqC,UAAUiD,aAAe,SAA4BpF,GAE1D,IAGIO,EAASC,EAAQC,EAAOL,EAASC,EAAQC,EACzC8E,EAJAjF,EAASsC,KAAKc,OAAOpD,MACrB6D,EAASvB,KAAKc,OAAOS,OACrBqB,GAAU5C,KAAKc,OAAOW,MAAQpE,EAAM8B,OAAOM,OAASpC,EAAM8B,OAAOK,MA2CrE,OAtCKjC,IAEHA,EADGsF,SACSA,SAASC,cAAc,UAAUC,WAAW,MAAMC,gBAAgBtF,EAAO6D,GAIzE,CACX7D,MAAQA,EACR6D,OAAQA,EACRb,KAAM,IAAIuC,kBAAkBvF,EAAQ6D,EAAS,KAK5CqB,IAAWvF,EAAM8B,OAAOG,UAAYsD,IAAWvF,EAAM8B,OAAOI,WAC/D5B,EAAU,EACVC,EAAU,EACVC,EAAU0D,IAGV5D,EAAU4D,EAAS,EACnB3D,GAAW,EACXC,GAAW,GAGR+E,IAAWvF,EAAM8B,OAAOG,UAAYsD,IAAWvF,EAAM8B,OAAOC,aAC/DtB,EAAU,EACVC,EAAU,EACVC,EAAUN,IAGVI,EAAUJ,EAAQ,EAClBK,GAAW,EACXC,GAAW,GAKJgC,KAAKc,OAAOU,YACnB,KAAK,EACJmB,EAAe3C,KAAKc,OAAOc,YAAcnD,EAAwBnB,EACjE,MAED,KAAK,GACJqF,EAAe3C,KAAKc,OAAOc,YAAclD,EAAyBL,EAClE,MAED,KAAK,GACJsE,EAAepE,EACf,MAED,KAAK,GACJoE,EAAenE,EAKjB,OADAmE,EAAapF,EAAUmD,KAAMV,KAAKzC,UAAWyC,KAAK+B,QAASrE,EAAOC,EAASC,EAAQC,EAAOC,EAASC,EAAQC,GACpGT,GASRF,EAAMqC,UAAUwD,UAAY,SAAyBC,GAEpD,IAAIC,EAAK7F,EAaT,OAXK4F,IACJA,EAASN,SAASC,cAAc,WAGjCvF,GADA6F,EAAMD,EAAOJ,WAAW,OACRC,gBAAgBhD,KAAKc,OAAOpD,MAAOsC,KAAKc,OAAOS,QAE/D4B,EAAOzF,MAASsC,KAAKc,OAAOpD,MAC5ByF,EAAO5B,OAASvB,KAAKc,OAAOS,OAE5B6B,EAAIC,aAAarD,KAAK2C,aAAapF,GAAY,EAAG,GAE3C4F,GAUR9F,EAAMqC,UAAU4D,WAAa,SAAyBC,GAErD,OAAOvD,KAAKkD,YAAYM,UAAUD,GAAQ,cAK3C,IAAIE,EAAO,GAaVA,EAAKC,QAAUA,EAKZD,EAAKC,UACRD,EAAKC,QAAQC,IAAMtG,GAniBrB,6GChBA,SAAAuG,GAAA,SAAAC,IAAA,IAAAC,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YACY8D,EAAAG,SAAW,SAACC,GAA4B,gCAAyBA,EAAS,SAAW,aAEtFJ,EAAAK,OAAS,WAEZ,OADAC,EAAA,EAAQC,IAAIC,EAAA,EAAYA,EAAA,EAAUA,EAAA,EAASA,EAAA,GAEvCC,EAAA,oBAAIC,QAAS,WAAM,OAAAV,EAAKW,MAAMC,WAAWZ,EAAKW,MAAME,gBAChDJ,EAAA,oBAAIK,MAAM,OAAOd,EAAKW,MAAME,aAAaE,IACzCN,EAAA,wBAAKT,EAAKW,MAAME,aAAaG,aAC7BP,EAAA,wBAAKT,EAAKW,MAAME,aAAaI,YAAcC,OAAOlB,EAAKW,MAAME,aAAaM,aAAe,UACzFV,EAAA,wBACIA,EAAA,cAACW,EAAA,EAAe,CAACC,KAAK,YAAYC,MAAM,SAASC,KAAK,KAAKC,UAAWxB,EAAKG,SAASH,EAAKW,MAAME,aAAaY,UAAY,KACxHhB,EAAA,cAACW,EAAA,EAAe,CAACC,KAAK,SAASC,MAAM,YAAYC,KAAK,KAAKC,UAAWxB,EAAKG,SAA8C,MAArCH,EAAKW,MAAME,aAAaa,YAC5GjB,EAAA,cAACW,EAAA,EAAe,CAACC,KAAK,QAAQC,MAAM,WAAWC,KAAK,KAAKC,UAAWxB,EAAKG,SAASH,EAAKW,MAAME,aAAac,YAC1GlB,EAAA,cAACW,EAAA,EAAe,CAACC,KAAK,iBAAiBC,MAAM,YAAYC,KAAK,KAAKC,UAAWxB,EAAKG,SAASH,EAAKW,MAAME,aAAae,kBAKxI,OAnB4CC,EAAA,EAAA9B,EAAAD,GAmB5CC,EAnBA,CAA4CU,EAAA,6BCH5C,SAAAX,GAAA,SAAAgC,IAAA,IAAA9B,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YACW8D,EAAAK,OAAS,WAAmB,OAC/BI,EAAA,cAACsB,EAAA,EAAG,KACAtB,EAAA,cAACuB,EAAA,EAAK,CAACC,SAAO,EAACC,MAAI,EAACC,OAAK,GACrB1B,EAAA,uBAAOe,UAAU,cACbf,EAAA,wBACIA,EAAA,6BACAA,EAAA,gCACAA,EAAA,gCACAA,EAAA,oCAGRA,EAAA,2BACK2B,OAAOC,OAAOrC,EAAKW,MAAME,cACrByB,KAAK,SAACC,EAAKC,GAAQ,OAAAD,EAAIxB,GAAKyB,EAAIzB,KAChC0B,IAAI,SAAC5B,GAAiB,OAAAJ,EAAA,cAACiC,EAAc,CAACC,IAAK9B,EAAaE,GAAIH,WAAYZ,EAAKW,MAAMiC,iBAAmB/B,aAAcA,YAK7I,OApBwCgB,EAAA,EAAAC,EAAAhC,GAoBxCgC,EApBA,CAAwCrB,EAAA,qCCDxC,SAAAX,GAAA,SAAA+C,IAAA,IAAA7C,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YACY8D,EAAA8C,QAAU,WAAc,OAAA9C,EAAKW,MAAMoC,SAASC,QAAU,EAAI,SAAW,QAErEhD,EAAAiD,YAAc,WAAc,OAAsE,KAArEjD,EAAKW,MAAMoC,SAASC,QAAU,EAAI,EAAIhD,EAAKW,MAAMoC,SAASC,UAExFhD,EAAAK,OAAS,WAAmB,OAC/BI,EAAA,cAACyC,EAAA,EAAS,KACNzC,EAAA,cAACsB,EAAA,EAAG,KACAtB,EAAA,cAAC0C,EAAA,EAAG,CAAC3B,UAAU,gBACXf,EAAA,cAAC2C,EAAA,EAAK,CAACjJ,MAAO6F,EAAK8C,WACfrC,EAAA,uBAAIT,EAAKW,MAAMoC,SAASM,SACxB5C,EAAA,cAAC6C,EAAA,EAAQ,CAACC,MAAOvD,EAAKiD,cAAe9I,MAAO6F,EAAK8C,UAAWb,SAAO,EAACuB,UAAQ,WAMpG,OAjByC3B,EAAA,EAAAgB,EAAA/C,GAiBzC+C,EAjBA,CAAyCpC,EAAA,aCHzC,SAAAX,GAAA,SAAA2D,IAAA,IAAAzD,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YACY8D,EAAA0D,eAAiB,SAACC,GACtBA,EAAMC,iBACN,IAAMhH,EAAO,IAAIiH,SAASF,EAAMG,QAChC9D,EAAKW,MAAMoD,SAASnH,EAAKoH,IAAI,WAC7BhE,EAAKiE,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZC,OAAQvH,EAAKoH,IAAI,eAIlBhE,EAAAK,OAAS,WACZ,OACII,EAAA,qBAAKe,UAAU,wCACXf,EAAA,qBAAKe,UAAU,aACXf,EAAA,mBAAGe,UAAU,6BAA6B4C,KAAK,KAAG,yBAClD3D,EAAA,sBAAMe,UAAU,gCAAgC6C,SAAUrE,EAAK0D,gBAC3DjD,EAAA,uBAAOe,UAAU,uBAAuB/B,KAAK,SAAS6E,KAAK,SAASC,YAAY,SAAQC,aAAY,WACpG/D,EAAA,wBAAQe,UAAU,uCAAuC/B,KAAK,UAAQ,gBAM9F,OAxB6CoC,EAAA,EAAA4B,EAAA3D,GAwB7C2D,EAxBA,CAA6ChD,EAAA,qCCG7C,SAAAX,GAAA,SAAA2E,IAAA,IAAAzE,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YAEY8D,EAAA0E,YAAc,WAAe,OAA2B,IAA3B1E,EAAKW,MAAMgE,aACxC3E,EAAA4E,aAAe,WAAe,OAA2B,IAA3B5E,EAAKW,MAAMgE,aACzC3E,EAAA6E,WAAa,WAAe,OAAA7E,EAAKW,MAAMgE,cAAgB3E,EAAKW,MAAMmE,UAAY,GAC9E9E,EAAA+E,iBAAmB,WAAe,OAAA/E,EAAKW,MAAMgE,cAAgB3E,EAAKW,MAAMmE,UAAY,GAEpF9E,EAAAgF,gBAAkB,WAAc,OAAAhF,EAAK0E,eAAiB1E,EAAK4E,eAC7D,EACA5E,EAAK6E,cAAgB7E,EAAK+E,mBACtB/E,EAAKW,MAAMmE,UAAY,EACvB9E,EAAKW,MAAMgE,aAEb3E,EAAAiF,WAAa,SAACC,GAAqC,OAAAA,EAAOlF,EAAKW,MAAMmE,UACzErE,EAAA,cAAC0E,EAAA,EAAc,CAAC/E,OAAQ8E,IAASlF,EAAKW,MAAMgE,aACxClE,EAAA,cAAC2E,EAAA,EAAc,CAAC1E,QAAS,WAAM,OAAAV,EAAKW,MAAM0E,WAAWH,KAAQA,EAAO,IAExE,MAEIlF,EAAAsF,WAAa,WAAmB,OACpC7E,EAAA,cAAC0E,EAAA,EAAc,CAACI,UAAQ,GACpB9E,EAAA,cAAC2E,EAAA,EAAc,cAIhBpF,EAAAK,OAAS,WAAmB,OAC/BI,EAAA,cAACsB,EAAA,EAAG,CAACP,UAAU,0BACXf,EAAA,cAAC0C,EAAA,EAAG,CAACqC,GAAG,QACJ/E,EAAA,cAACgF,EAAA,EAAU,CAACjE,UAAU,gBAClBf,EAAA,cAAC0E,EAAA,EAAc,CAACI,SAAUvF,EAAK0E,eAC3BjE,EAAA,cAAC2E,EAAA,EAAc,CAACM,UAAQ,EAAChF,QAAS,WAAM,OAAAV,EAAKW,MAAM0E,WAAWrF,EAAKW,MAAMgE,YAAc,OAEzF3E,EAAKW,MAAMgE,YAAc,GAAK3E,EAAKiF,WAAW,GAC9CjF,EAAKW,MAAMgE,YAAc,GAAK3E,EAAKiF,WAAW,GAC9CjF,EAAKW,MAAMgE,YAAc,GAAK3E,EAAKsF,aACnCtF,EAAKiF,WAAWjF,EAAKgF,kBAAoB,GACzChF,EAAKiF,WAAWjF,EAAKgF,kBAAoB,GACzChF,EAAKiF,WAAWjF,EAAKgF,mBACrBhF,EAAKiF,WAAWjF,EAAKgF,kBAAoB,GACzChF,EAAKiF,WAAWjF,EAAKgF,kBAAoB,GACzChF,EAAKW,MAAMgE,YAAc3E,EAAKW,MAAMmE,UAAY,GAAK9E,EAAKsF,aAC1DtF,EAAKW,MAAMgE,YAAc3E,EAAKW,MAAMmE,UAAY,GAAK9E,EAAKiF,WAAWjF,EAAKW,MAAMmE,UAAY,GAC5F9E,EAAKW,MAAMgE,YAAc3E,EAAKW,MAAMmE,UAAY,GAAK9E,EAAKiF,WAAWjF,EAAKW,MAAMmE,UAAY,GAC9FrE,EAAA,cAAC0E,EAAA,EAAc,CAACI,SAAUvF,EAAK6E,cAC3BpE,EAAA,cAAC2E,EAAA,EAAc,CAACO,MAAI,EAACjF,QAAS,WAAM,OAAAV,EAAKW,MAAM0E,WAAWrF,EAAKW,MAAMgE,YAAc,aAM3G,OAlDyC9C,EAAA,EAAA4C,EAAA3E,GAkDzC2E,EAlDA,CAAyChE,EAAA,kBCLpBmF,EAArB,oBAAAC,KAOA,OAN4BA,EAAAC,QACS,gDAEnBD,EAAAE,WAAa,kBAAAlE,EAAA,OAR/BmE,OAQ+B,EAAUC,QAAO,8DACjC,SAAMC,EAAA,IAAML,EAAIC,QAAU,mBAAjC,SAAOK,EAAAC,cAEfP,EAPA,GCAqBQ,EAArB,oBAAAC,KAoDA,OAnDkBA,EAAAC,WAAa,SAAOC,EAAgDC,GAAqD,OAAA5E,EAAA,OAL3ImE,OAK2I,EAAGC,QAAO,oEAC7IO,EAAW,CACPxD,QAAS,EACTK,QAAS,yCAGM,gCAAMuC,EAAIG,qBAEzB,QAFItJ,EAAWiK,EAAAN,QAEEO,UACjB,KAAK,EAED,OADAH,OAAWR,GACX,GAAOvJ,EAASmK,SACpB,KAAK,EAGD,OAFAJ,EAAW/J,EAASsG,UACpBuD,EAAmBO,cAAcL,EAAYC,GAC7C,GAAO,uBAOX,gBAJAD,EAAW,CACPxD,SAAU,EACVK,QAAS,uDAEb,GAAO,WAEX,SAAO,UAGIiD,EAAAQ,MAAQ,SAAOC,GAAU,OAAAlF,EAAA,OAhC5CmE,OAgC4C,2BAAAnE,EAAA,EAAA3F,KAAA,SAAAiK,GAAK,aAAIF,QAAQ,SAAAe,GAAW,OAAAC,WAAWD,EAASD,WAEzET,EAAAO,cAAgB,SAAOL,EAAgDC,GAAqD,OAAA5E,EAAA,OAlC/ImE,OAkC+I,oHAG/H,SAAMM,EAAmBQ,MAAM,aAChB,OADfJ,EAAAN,OACe,GAAMR,EAAIG,qBAEzB,QAFItJ,EAAWiK,EAAAN,QAEEO,UACjB,KAAK,EAGD,OAFAH,OAAWR,GACXS,EAAKhK,EAASmK,SACd,IACJ,KAAK,EACDJ,EAAW/J,EAASsG,2BAEf,sDAEbyD,EAAW,CACPxD,SAAU,EACVK,QAAS,oFAIzBiD,EApDA,aCGA,SAAAxG,GAAA,SAAAoH,IAAA,IAAAlH,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YACW8D,EAAAK,OAAS,WAAmB,OAC/BI,EAAA,yBACIA,EAAA,sBAAMe,UAAU,4BACXxB,EAAKW,MAAMwG,YAEhB1G,EAAA,0BACK2G,KAAKC,UAAUrH,EAAKW,MAAM4C,YAI3C,OAXsC1B,EAAA,EAAAqF,EAAApH,GAWtCoH,EAXA,CAAsCzG,EAAA,WCFlC6G,EAASC,EAAQ,IAOAC,EAArB,oBAAAC,KA+CA,OA9CmBA,EAAAC,OAAiB,6EAElBD,EAAApH,OAAS,SAAOsH,EAAmBC,GAAgB,OAAA/F,EAAA,OAfrEmE,OAeqE,uFAC7D,GAAuB,IAAnB2B,EAAQ7K,OACR,UASJ,KANMuC,EAAS6G,EAAE0B,GAAU5D,MAAM,IAC1BpK,MAAQ,IACfyF,EAAO5B,OAAS,IAEVoK,EAAUxI,EAAOJ,WAAW,MAC9B6I,EAAiB,GACZ1N,EAAI,EAAGA,EAAIuN,EAAQ7K,SAAU1C,EAClC0N,EAAeC,KAAKN,EAAsBrI,UAAUuI,EAAQvN,KAGzC,SAAM6L,QAAQ+B,IAAIF,WAGzC,IAHMG,EAAiB9B,EAAAC,OACjB8B,EAAcD,EAAexF,IAAI,SAACpD,EAAQ8I,GAAsB,OAAGC,OAAQT,EAAQQ,GAAQ9I,OAAMA,KAE9FjF,EAAI,EAAGA,EAAIuN,EAAQ7K,SAAU1C,EAClCqN,EAAsBY,UAAUjO,EAAG8N,EAAaL,mBAIzCJ,EAAArI,UAAY,SAAOgJ,GAAc,OAAAvG,EAAA,OAtCpDmE,OAsCoD,EAAGC,QAAO,8DAC/C,SAAM,IAAIA,QAA2B,SAACe,EAASsB,GAClD,IAAIrM,EAAW,IAAIqL,EAAOzH,IAC1B5D,EAAIJ,KAAK4L,EAAsBC,OAASU,EAAOrH,GAAK,OAAQ,WACxDiG,EAAQ/K,EAAImD,UAAU8G,EAAE,IAAMkC,EAAOrH,IAAIiD,MAAM,SAGtDuE,MAAM,SAAAC,GAAQ,MAAMA,YANrB,SAAOrC,EAAAC,cASIqB,EAAAY,UAAY,SAAOF,EAAeR,EAAuBE,GAAiC,OAAAhG,EAAA,OAhD7GmE,OAgD6G,iEAC/FG,EAAWsB,EAAsBgB,YAAYd,EAAQQ,IAAnD9N,EAAC8L,EAAA9L,EAAEC,EAAC6L,EAAA7L,EACZuN,EAAQa,UAAUf,EAAQQ,GAAO9I,OAAQ,IAAMhF,EAAG,IAAMC,YAG7CmN,EAAAgB,YAAc,SAACL,GAC1B,MAAO,CACH/N,EAAG+N,EAAOA,OAAOO,SAAStO,EAAI+N,EAAO/I,OAAOzF,MAAQ,EACpDU,EAAG8N,EAAOA,OAAOO,SAASrO,EAAI8N,EAAO/I,OAAO5B,OAAS,IAGjEgK,EA/CA,KCIA,SAAA3H,GAAA,SAAA8I,IAAA,IAAA5I,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YAKY8D,EAAA6I,aAAe,WAAc,OAAA7I,EAAKW,MAAME,aAAaE,GAAG+H,YAExD9I,EAAA+I,iBAAmB,SAACX,GAAgC,OACxD3H,EAAA,cAAC0C,EAAA,EAAG,CAACqC,GAAG,IAAIwD,GAAG,IAAIC,GAAG,IAAIzH,UAAU,qBAChCf,EAAA,qBAAKe,UAAU,uBACXf,EAAA,wBAAQM,GAAIqH,EAAOU,WAAYtH,UAAU,YAE7Cf,EAAA,cAACyI,EAAQ,CAAC/B,OAAO,KAAK5D,MAAO6E,EAAOrH,KACpCN,EAAA,cAACyI,EAAQ,CAAC/B,OAAO,SAAS5D,MAAO6E,EAAOe,SACxC1I,EAAA,cAACyI,EAAQ,CAAC/B,OAAO,MAAM5D,MAAO6E,EAAOO,aAItC3I,EAAAK,OAAS,WAAmB,OAC/BI,EAAA,cAACyC,EAAA,EAAS,KACNzC,EAAA,cAACsB,EAAA,EAAG,KACAtB,EAAA,cAAC0C,EAAA,EAAG,CAAC6F,GAAG,IAAIC,GAAG,KACXxI,EAAA,cAACsB,EAAA,EAAG,KACAtB,EAAA,cAAC2I,EAAA,EAAM,CAACjP,MAAM,OAAOuG,QAASV,EAAKW,MAAM0I,OAAK,sBAElD5I,EAAA,cAACsB,EAAA,EAAG,KACAtB,EAAA,cAAC0C,EAAA,EAAG,KACA1C,EAAA,wBAAKT,EAAKW,MAAME,aAAaG,aAC7BP,EAAA,cAACyI,EAAQ,CAAC/B,OAAO,KAAK5D,MAAOvD,EAAKW,MAAME,aAAaE,QAIjEN,EAAA,cAAC0C,EAAA,EAAG,CAAC6F,GAAG,IAAIC,GAAG,KACXxI,EAAA,qBAAKe,UAAU,kBACXf,EAAA,wBAAQM,GAAIf,EAAK6I,eAAgBrH,UAAU,cAIvDf,EAAA,cAACsB,EAAA,EAAG,KACAtB,EAAA,cAAC0C,EAAA,EAAG,KACA1C,EAAA,0CAGRA,EAAA,cAACsB,EAAA,EAAG,KACC/B,EAAKW,MAAME,aAAa8G,QAAQlF,IAAIzC,EAAK+I,uBAI1D,OAhD0ClH,EAAA,EAAA+G,EAAA9I,GACtC8I,EAAAhN,UAAA0N,kBAAA,WACI9B,EAAsBnH,OAAOnE,KAAKyE,MAAME,aAAa8G,QAAS,IAAMzL,KAAK2M,iBA8CjFD,EAhDA,CAA0CnI,EAAA,WCWrB8I,EAArB,SAAAzJ,GAAA,SAAA0J,IAAA,IAAAxJ,EAAA,OAAAF,KAAAG,MAAA/D,KAAAgE,YAAAhE,YACW8D,EAAAyJ,MAAmB,CACtBC,cAAe,GACfC,oBAAgB3D,EAChB7B,OAAQ,GACRyF,cAAe,EACfC,aAAc,GACdlF,YAAa,GAGjB3E,EAAAsJ,kBAAoB,kBAAAzH,EAAA,EAAA7B,OAAA,6EACM,SAAMqG,EAAmBE,WAAWrK,KAAK4N,kBAAmB5N,KAAK6N,8BAAjFL,EAAgBvD,EAAAC,OACtBlK,KAAK+H,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZwF,cAAaA,EACbE,cAAexH,OAAO4H,KAAKN,GAAe5M,qBAI1CkD,EAAAiK,mBAAqB,WAA2B,OAAA7H,OAAOC,OAAOrC,EAAKyJ,MAAMC,eACxEvF,OAAO,SAAC+F,GAAW,OAAAV,EAAIW,eAAeD,EAAOlJ,YAAahB,EAAKyJ,MAAMtF,UACrEiG,MAAMpK,EAAKyJ,MAAM9E,YAAc3E,EAAKyJ,MAAMI,aAAc7J,EAAKyJ,MAAM9E,YAAc3E,EAAKyJ,MAAMI,aAAe7J,EAAKyJ,MAAMI,eAEvH7J,EAAAqK,oBAAsB,WAAyB,OACnD1F,YAAa3E,EAAKyJ,MAAM9E,YACxBG,UAAWwF,KAAKC,KAAKvK,EAAKyJ,MAAMG,cAAgB5J,EAAKyJ,MAAMI,cAAgB,EAC3ExE,WAAYrF,EAAKwK,eAGbxK,EAAAyK,YAAc,WAAe,YAAwBzE,IAAxBhG,EAAKyJ,MAAM1G,UAIxC/C,EAAA0D,eAAiB,SAACS,GACtBnE,EAAKiE,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZC,OAAMA,EACNyF,cAAexH,OAAOC,OAAO6B,EAAUwF,eAAevF,OAAO,SAAC+F,GAAW,OAAAV,EAAIW,eAAeD,EAAOlJ,YAAamD,KAASrH,YAIzHkD,EAAAwK,aAAe,SAACE,GACpB1K,EAAKiE,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZS,YAAa+F,OAIb1K,EAAA8J,kBAAoB,SAAC/G,GACzB/C,EAAKiE,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZnB,SAAQA,OAIR/C,EAAA+J,cAAgB,SAACL,GACrB1J,EAAKiE,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZwF,cAAaA,EACbE,cAAexH,OAAO4H,KAAKN,GAAe5M,YAI1CkD,EAAA4C,iBAAmB,SAAC/B,GACxBb,EAAKiE,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZyF,eAAgB9I,EAAaE,QAI7Bf,EAAA2K,eAAiB,WACrB3K,EAAKiE,SAAS,SAACC,GAAc,OAACrC,EAAA,KACvBqC,EAAS,CACZyF,oBAAgB3D,OAIhBhG,EAAA4K,YAAc,WAAmB,OACrCnK,EAAA,cAACyC,EAAA,EAAS,KACNzC,EAAA,cAACoK,EAAU,CAAChK,aAAcb,EAAKiK,qBAAsBrH,iBAAkB5C,EAAK4C,mBAC1E5C,EAAKyJ,MAAMG,cAAgB5J,EAAKyJ,MAAMI,cAAgBpJ,EAAA,cAACqK,EAAWjJ,EAAA,KAAM7B,EAAKqK,0BAI/ErK,EAAA+K,mBAAqB,WAAmB,OAC5CtK,EAAA,cAACuK,EAAY,CAACnK,aAAcb,EAAKyJ,MAAMC,cAAc1J,EAAKyJ,MAAME,gBAAkBN,MAAOrJ,EAAK2K,kBAG3F3K,EAAAK,OAAS,WAAmB,OAC/BI,EAAA,yBACIA,EAAA,cAACwK,EAAe,CAAClH,SAAU/D,EAAK0D,iBAChCjD,EAAA,sBAAMyK,KAAK,QACLlL,EAAKyK,eAAiBhK,EAAA,cAAC0K,EAAW,CAACpI,SAAU/C,EAAKyJ,MAAM1G,WACxD/C,EAAKyJ,MAAME,eAAiB3J,EAAK+K,qBAAuB/K,EAAK4K,mBAI/E,OAjGiC/I,EAAA,EAAA2H,EAAA1J,GA+Bd0J,EAAAW,eAAiB,SAACiB,EAAgBC,GAA4B,OAAAD,EAAOE,cAAcC,QAAQF,EAAOC,gBAAkB,GAkEvI9B,EAjGA,CAAiC/I,EAAA,WChB3B+K,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAyCN,SAASC,EAAgBC,GACvBC,UAAUC,cACPC,SAASH,GACTI,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WAClCD,IACFA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB7C,QACfuC,UAAUC,cAAcQ,WAK1BC,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,4CAOvBpE,MAAM,SAAAqE,GACLF,QAAQE,MAAM,4CAA6CA,KC9EjEC,EAAA,OACEpM,EAAA,cAAC8I,EAAG,MACJxK,SAAS+N,eAAe,SDYX,WACb,GAA6C,kBAAmBd,UAAW,CAMzE,GAJkB,IAAIe,IACpB,sBACArB,OAAOC,SAAS7C,YAEJhK,SAAW4M,OAAOC,SAAS7M,OAIvC,OAGF4M,OAAOsB,iBAAiB,OAAQ,WAC9B,IAAMjB,EAAW,wCAEbP,GAmDV,SAAiCO,GAE/BkB,MAAMlB,GACHI,KAAK,SAAA1P,GAGkB,MAApBA,EAASH,SACwD,IAAjEG,EAASyQ,QAAQlJ,IAAI,gBAAiBuH,QAAQ,cAG9CS,UAAUC,cAAckB,MAAMhB,KAAK,SAAAC,GACjCA,EAAagB,aAAajB,KAAK,WAC7BT,OAAOC,SAAS0B,aAKpBvB,EAAgBC,KAGnBxD,MAAM,WACLmE,QAAQC,IACN,mEAvEAW,CAAwBvB,GAIxBC,UAAUC,cAAckB,MAAMhB,KAAK,WACjCO,QAAQC,IACN,+GAMJb,EAAgBC,MCzCxBG","file":"static/js/main.2e52cfa7.chunk.js","sourcesContent":[" /**\n * @fileoverview jsTGALoader - Javascript loader for TGA file\n * @author Vincent Thibault\n * @version 1.2.0\n * @blog http://blog.robrowser.com/javascript-tga-loader.html\n */\n\n/* Copyright (c) 2013, Vincent Thibault. All rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification,\nare permitted provided that the following conditions are met:\n\n  * Redistributions of source code must retain the above copyright notice, this\n    list of conditions and the following disclaimer.\n  * Redistributions in binary form must reproduce the above copyright notice,\n    this list of conditions and the following disclaimer in the documentation \n    and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE \nDISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR\nANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON\nANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. */\n\n(function(_global)\n{\n\t'use strict';\n\n\n\t/**\n\t * TGA Namespace\n\t * @constructor\n\t */\n\tfunction Targa()\n\t{\n\t}\n\n\n\t/**\n\t * @var {object} TGA type constants\n\t */\n\tTarga.Type = {\n\t\tNO_DATA:      0,\n\t\tINDEXED:      1,\n\t\tRGB:          2,\n\t\tGREY:         3,\n\t\tRLE_INDEXED:  9,\n\t\tRLE_RGB:     10,\n\t\tRLE_GREY:    11\n\t};\n\n\n\t/**\n\t * @var {object} TGA origin constants\n\t */\n\tTarga.Origin = {\n\t\tBOTTOM_LEFT:  0x00,\n\t\tBOTTOM_RIGHT: 0x01,\n\t\tTOP_LEFT:     0x02,\n\t\tTOP_RIGHT:    0x03,\n\t\tSHIFT:        0x04,\n\t\tMASK:         0x30\n\t};\n\n\n\t/**\n\t * Check the header of TGA file to detect errors\n\t *\n\t * @param {object} tga header structure\n\t * @throws Error\n\t */\n\tfunction checkHeader( header )\n\t{\n\t\t// What the need of a file without data ?\n\t\tif (header.imageType === Targa.Type.NO_DATA) {\n\t\t\tthrow new Error('Targa::checkHeader() - No data');\n\t\t}\n\n\t\t// Indexed type\n\t\tif (header.hasColorMap) {\n\t\t\tif (header.colorMapLength > 256 || header.colorMapDepth !== 24 || header.colorMapType !== 1) {\n\t\t\t\tthrow new Error('Targa::checkHeader() - Invalid colormap for indexed type');\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif (header.colorMapType) {\n\t\t\t\tthrow new Error('Targa::checkHeader() - Why does the image contain a palette ?');\n\t\t\t}\n\t\t}\n\n\t\t// Check image size\n\t\tif (header.width <= 0 || header.height <= 0) {\n\t\t\tthrow new Error('Targa::checkHeader() - Invalid image size');\n\t\t}\n\n\t\t// Check pixel size\n\t\tif (header.pixelDepth !== 8  &&\n\t\t    header.pixelDepth !== 16 &&\n\t\t    header.pixelDepth !== 24 &&\n\t\t    header.pixelDepth !== 32) {\n\t\t\tthrow new Error('Targa::checkHeader() - Invalid pixel size \"' + header.pixelDepth + '\"');\n\t\t}\n\t}\n\n\n\t/**\n\t * Decode RLE compression\n\t *\n\t * @param {Uint8Array} data\n\t * @param {number} offset in data to start loading RLE\n\t * @param {number} pixel count\n\t * @param {number} output buffer size\n\t */\n\tfunction decodeRLE( data, offset, pixelSize, outputSize)\n\t{\n\t\tvar pos, c, count, i;\n\t\tvar pixels, output;\n\n\t\toutput = new Uint8Array(outputSize);\n\t\tpixels = new Uint8Array(pixelSize);\n\t\tpos    = 0;\n\n\t\twhile (pos < outputSize) {\n\t\t\tc     = data[offset++];\n\t\t\tcount = (c & 0x7f) + 1;\n\n\t\t\t// RLE pixels.\n\t\t\tif (c & 0x80) {\n\t\t\t\t// Bind pixel tmp array\n\t\t\t\tfor (i = 0; i < pixelSize; ++i) {\n\t\t\t\t\tpixels[i] = data[offset++];\n\t\t\t\t}\n\n\t\t\t\t// Copy pixel array\n\t\t\t\tfor (i = 0; i < count; ++i) {\n\t\t\t\t\toutput.set(pixels, pos);\n\t\t\t\t\tpos += pixelSize;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Raw pixels.\n\t\t\telse {\n\t\t\t\tcount *= pixelSize;\n\t\t\t\tfor (i = 0; i < count; ++i) {\n\t\t\t\t\toutput[pos++] = data[offset++];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn output;\n\t}\n\n\n\t/**\n\t * Return a ImageData object from a TGA file (8bits)\n\t *\n\t * @param {Array} imageData - ImageData to bind\n\t * @param {Array} indexes - index to colormap\n\t * @param {Array} colormap\n\t * @param {number} width\n\t * @param {number} y_start - start at y pixel.\n\t * @param {number} x_start - start at x pixel.\n\t * @param {number} y_step  - increment y pixel each time.\n\t * @param {number} y_end   - stop at pixel y.\n\t * @param {number} x_step  - increment x pixel each time.\n\t * @param {number} x_end   - stop at pixel x.\n\t * @returns {Array} imageData\n\t */\n\tfunction getImageData8bits(imageData, indexes, colormap, width, y_start, y_step, y_end, x_start, x_step, x_end)\n\t{\n\t\tvar color, i, x, y;\n\n\t\tfor (i = 0, y = y_start; y !== y_end; y += y_step) {\n\t\t\tfor (x = x_start; x !== x_end; x += x_step, i++) {\n\t\t\t\tcolor = indexes[i];\n\t\t\t\timageData[(x + width * y) * 4 + 3] = 255;\n\t\t\t\timageData[(x + width * y) * 4 + 2] = colormap[(color * 3) + 0];\n\t\t\t\timageData[(x + width * y) * 4 + 1] = colormap[(color * 3) + 1];\n\t\t\t\timageData[(x + width * y) * 4 + 0] = colormap[(color * 3) + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn imageData;\n\t}\n\n\n\t/**\n\t * Return a ImageData object from a TGA file (16bits)\n\t *\n\t * @param {Array} imageData - ImageData to bind\n\t * @param {Array} pixels data\n\t * @param {Array} colormap - not used\n\t * @param {number} width\n\t * @param {number} y_start - start at y pixel.\n\t * @param {number} x_start - start at x pixel.\n\t * @param {number} y_step  - increment y pixel each time.\n\t * @param {number} y_end   - stop at pixel y.\n\t * @param {number} x_step  - increment x pixel each time.\n\t * @param {number} x_end   - stop at pixel x.\n\t * @returns {Array} imageData\n\t */\n\tfunction getImageData16bits(imageData, pixels, colormap, width, y_start, y_step, y_end, x_start, x_step, x_end)\n\t{\n\t\tvar color, i, x, y;\n\n\t\tfor (i = 0, y = y_start; y !== y_end; y += y_step) {\n\t\t\tfor (x = x_start; x !== x_end; x += x_step, i += 2) {\n\t\t\t\tcolor = pixels[i + 0] | (pixels[i + 1] << 8);\n\t\t\t\timageData[(x + width * y) * 4 + 0] = (color & 0x7C00) >> 7;\n\t\t\t\timageData[(x + width * y) * 4 + 1] = (color & 0x03E0) >> 2;\n\t\t\t\timageData[(x + width * y) * 4 + 2] = (color & 0x001F) >> 3;\n\t\t\t\timageData[(x + width * y) * 4 + 3] = (color & 0x8000) ? 0 : 255;\n\t\t\t}\n\t\t}\n\n\t\treturn imageData;\n\t}\n\n\n\t/**\n\t * Return a ImageData object from a TGA file (24bits)\n\t *\n\t * @param {Array} imageData - ImageData to bind\n\t * @param {Array} pixels data\n\t * @param {Array} colormap - not used\n\t * @param {number} width\n\t * @param {number} y_start - start at y pixel.\n\t * @param {number} x_start - start at x pixel.\n\t * @param {number} y_step  - increment y pixel each time.\n\t * @param {number} y_end   - stop at pixel y.\n\t * @param {number} x_step  - increment x pixel each time.\n\t * @param {number} x_end   - stop at pixel x.\n\t * @returns {Array} imageData\n\t */\n\tfunction getImageData24bits(imageData, pixels, colormap, width, y_start, y_step, y_end, x_start, x_step, x_end)\n\t{\n\t\tvar i, x, y;\n\n\t\tfor (i = 0, y = y_start; y !== y_end; y += y_step) {\n\t\t\tfor (x = x_start; x !== x_end; x += x_step, i += 3) {\n\t\t\t\timageData[(x + width * y) * 4 + 3] = 255;\n\t\t\t\timageData[(x + width * y) * 4 + 2] = pixels[i + 0];\n\t\t\t\timageData[(x + width * y) * 4 + 1] = pixels[i + 1];\n\t\t\t\timageData[(x + width * y) * 4 + 0] = pixels[i + 2];\n\t\t\t}\n\t\t}\n\n\t\treturn imageData;\n\t}\n\n\n\t/**\n\t * Return a ImageData object from a TGA file (32bits)\n\t *\n\t * @param {Array} imageData - ImageData to bind\n\t * @param {Array} pixels data\n\t * @param {Array} colormap - not used\n\t * @param {number} width\n\t * @param {number} y_start - start at y pixel.\n\t * @param {number} x_start - start at x pixel.\n\t * @param {number} y_step  - increment y pixel each time.\n\t * @param {number} y_end   - stop at pixel y.\n\t * @param {number} x_step  - increment x pixel each time.\n\t * @param {number} x_end   - stop at pixel x.\n\t * @returns {Array} imageData\n\t */\n\tfunction getImageData32bits(imageData, pixels, colormap, width, y_start, y_step, y_end, x_start, x_step, x_end)\n\t{\n\t\tvar i, x, y;\n\n\t\tfor (i = 0, y = y_start; y !== y_end; y += y_step) {\n\t\t\tfor (x = x_start; x !== x_end; x += x_step, i += 4) {\n\t\t\t\timageData[(x + width * y) * 4 + 2] = pixels[i + 0];\n\t\t\t\timageData[(x + width * y) * 4 + 1] = pixels[i + 1];\n\t\t\t\timageData[(x + width * y) * 4 + 0] = pixels[i + 2];\n\t\t\t\timageData[(x + width * y) * 4 + 3] = pixels[i + 3];\n\t\t\t}\n\t\t}\n\n\t\treturn imageData;\n\t}\n\n\n\t/**\n\t * Return a ImageData object from a TGA file (8bits grey)\n\t *\n\t * @param {Array} imageData - ImageData to bind\n\t * @param {Array} pixels data\n\t * @param {Array} colormap - not used\n\t * @param {number} width\n\t * @param {number} y_start - start at y pixel.\n\t * @param {number} x_start - start at x pixel.\n\t * @param {number} y_step  - increment y pixel each time.\n\t * @param {number} y_end   - stop at pixel y.\n\t * @param {number} x_step  - increment x pixel each time.\n\t * @param {number} x_end   - stop at pixel x.\n\t * @returns {Array} imageData\n\t */\n\tfunction getImageDataGrey8bits(imageData, pixels, colormap, width, y_start, y_step, y_end, x_start, x_step, x_end)\n\t{\n\t\tvar color, i, x, y;\n\n\t\tfor (i = 0, y = y_start; y !== y_end; y += y_step) {\n\t\t\tfor (x = x_start; x !== x_end; x += x_step, i++) {\n\t\t\t\tcolor = pixels[i];\n\t\t\t\timageData[(x + width * y) * 4 + 0] = color;\n\t\t\t\timageData[(x + width * y) * 4 + 1] = color;\n\t\t\t\timageData[(x + width * y) * 4 + 2] = color;\n\t\t\t\timageData[(x + width * y) * 4 + 3] = 255;\n\t\t\t}\n\t\t}\n\n\t\treturn imageData;\n\t}\n\n\n\t/**\n\t * Return a ImageData object from a TGA file (16bits grey)\n\t *\n\t * @param {Array} imageData - ImageData to bind\n\t * @param {Array} pixels data\n\t * @param {Array} colormap - not used\n\t * @param {number} width\n\t * @param {number} y_start - start at y pixel.\n\t * @param {number} x_start - start at x pixel.\n\t * @param {number} y_step  - increment y pixel each time.\n\t * @param {number} y_end   - stop at pixel y.\n\t * @param {number} x_step  - increment x pixel each time.\n\t * @param {number} x_end   - stop at pixel x.\n\t * @returns {Array} imageData\n\t */\n\tfunction getImageDataGrey16bits(imageData, pixels, colormap, width, y_start, y_step, y_end, x_start, x_step, x_end)\n\t{\n\t\tvar i, x, y;\n\n\t\tfor (i = 0, y = y_start; y !== y_end; y += y_step) {\n\t\t\tfor (x = x_start; x !== x_end; x += x_step, i += 2) {\n\t\t\t\timageData[(x + width * y) * 4 + 0] = pixels[i + 0];\n\t\t\t\timageData[(x + width * y) * 4 + 1] = pixels[i + 0];\n\t\t\t\timageData[(x + width * y) * 4 + 2] = pixels[i + 0];\n\t\t\t\timageData[(x + width * y) * 4 + 3] = pixels[i + 1];\n\t\t\t}\n\t\t}\n\n\t\treturn imageData;\n\t}\n\n\n\t/**\n\t * Open a targa file using XHR, be aware with Cross Domain files...\n\t *\n\t * @param {string} path - Path of the filename to load\n\t * @param {function} callback - callback to trigger when the file is loaded\n\t */\n\tTarga.prototype.open = function targaOpen(path, callback)\n\t{\n\t\tvar req, tga = this;\n\t\treq = new XMLHttpRequest();\n\t\treq.open('GET', path, true);\n\t\treq.responseType = 'arraybuffer';\n\t\treq.onload = function() {\n\t\t\tif (this.status === 200) {\n\t\t\t\ttga.load(new Uint8Array(req.response));\n\t\t\t\tif (callback) {\n\t\t\t\t\tcallback.call(tga);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treq.send(null);\n\t};\n\n\n\t/**\n\t * Load and parse a TGA file\n\t *\n\t * @param {Uint8Array} data - TGA file buffer array\n\t */\n\tTarga.prototype.load = function targaLoad( data )\n\t{\n\t\tvar offset = 0;\n\n\t\t// Not enough data to contain header ?\n\t\tif (data.length < 0x12) {\n\t\t\tthrow new Error('Targa::load() - Not enough data to contain header');\n\t\t}\n\n\t\t// Read TgaHeader\n\t\tthis.header = {\n\t\t\t/* 0x00  BYTE */  idLength:       data[offset++],\n\t\t\t/* 0x01  BYTE */  colorMapType:   data[offset++],\n\t\t\t/* 0x02  BYTE */  imageType:      data[offset++],\n\t\t\t/* 0x03  WORD */  colorMapIndex:  data[offset++] | data[offset++] << 8,\n\t\t\t/* 0x05  WORD */  colorMapLength: data[offset++] | data[offset++] << 8,\n\t\t\t/* 0x07  BYTE */  colorMapDepth:  data[offset++],\n\t\t\t/* 0x08  WORD */  offsetX:        data[offset++] | data[offset++] << 8,\n\t\t\t/* 0x0a  WORD */  offsetY:        data[offset++] | data[offset++] << 8,\n\t\t\t/* 0x0c  WORD */  width:          data[offset++] | data[offset++] << 8,\n\t\t\t/* 0x0e  WORD */  height:         data[offset++] | data[offset++] << 8,\n\t\t\t/* 0x10  BYTE */  pixelDepth:     data[offset++],\n\t\t\t/* 0x11  BYTE */  flags:          data[offset++]\n\t\t};\n\n\t\t// Set shortcut\n\t\tthis.header.hasEncoding = (this.header.imageType === Targa.Type.RLE_INDEXED || this.header.imageType === Targa.Type.RLE_RGB   || this.header.imageType === Targa.Type.RLE_GREY);\n\t\tthis.header.hasColorMap = (this.header.imageType === Targa.Type.RLE_INDEXED || this.header.imageType === Targa.Type.INDEXED);\n\t\tthis.header.isGreyColor = (this.header.imageType === Targa.Type.RLE_GREY    || this.header.imageType === Targa.Type.GREY);\n\n\t\t// Check if a valid TGA file (or if we can load it)\n\t\tcheckHeader(this.header);\n\n\t\t// Move to data\n\t\toffset += this.header.idLength;\n\t\tif (offset >= data.length) {\n\t\t\tthrow new Error('Targa::load() - No data');\n\t\t}\n\n\t\t// Read palette\n\t\tif (this.header.hasColorMap) {\n\t\t\tvar colorMapSize  = this.header.colorMapLength * (this.header.colorMapDepth >> 3);\n\t\t\tthis.palette      = data.subarray( offset, offset + colorMapSize);\n\t\t\toffset           += colorMapSize;\n\t\t}\n\n\t\tvar pixelSize  = this.header.pixelDepth >> 3;\n\t\tvar imageSize  = this.header.width * this.header.height;\n\t\tvar pixelTotal = imageSize * pixelSize;\n\n\t\t// RLE encoded\n\t\tif (this.header.hasEncoding) {\n\t\t\tthis.imageData = decodeRLE(data, offset, pixelSize, pixelTotal);\n\t\t}\n\n\t\t// RAW pixels\n\t\telse {\n\t\t\tthis.imageData = data.subarray( offset, offset + (this.header.hasColorMap ? imageSize : pixelTotal) );\n\t\t}\n\t};\n\n\n\t/**\n\t * Return a ImageData object from a TGA file\n\t *\n\t * @param {object} imageData - Optional ImageData to work with\n\t * @returns {object} imageData\n\t */\n\tTarga.prototype.getImageData = function targaGetImageData( imageData )\n\t{\n\t\tvar width  = this.header.width;\n\t\tvar height = this.header.height;\n\t\tvar origin = (this.header.flags & Targa.Origin.MASK) >> Targa.Origin.SHIFT;\n\t\tvar x_start, x_step, x_end, y_start, y_step, y_end;\n\t\tvar getImageData;\n\n\t\t\t// Create an imageData\n\t\tif (!imageData) {\n\t\t\tif (document) {\n\t\t\t\timageData = document.createElement('canvas').getContext('2d').createImageData(width, height);\n\t\t\t}\n\t\t\t// In Thread context ?\n\t\t\telse {\n\t\t\t\timageData = {\n\t\t\t\t\twidth:  width,\n\t\t\t\t\theight: height,\n\t\t\t\t\tdata: new Uint8ClampedArray(width * height * 4)\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tif (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.TOP_RIGHT) {\n\t\t\ty_start = 0;\n\t\t\ty_step  = 1;\n\t\t\ty_end   = height;\n\t\t}\n\t\telse {\n\t\t\ty_start = height - 1;\n\t\t\ty_step  = -1;\n\t\t\ty_end   = -1;\n\t\t}\n\n\t\tif (origin === Targa.Origin.TOP_LEFT || origin === Targa.Origin.BOTTOM_LEFT) {\n\t\t\tx_start = 0;\n\t\t\tx_step  = 1;\n\t\t\tx_end   = width;\n\t\t}\n\t\telse {\n\t\t\tx_start = width - 1;\n\t\t\tx_step  = -1;\n\t\t\tx_end   = -1;\n\t\t}\n\n\t\t// TODO: use this.header.offsetX and this.header.offsetY ?\n\n\t\tswitch (this.header.pixelDepth) {\n\t\t\tcase 8:\n\t\t\t\tgetImageData = this.header.isGreyColor ? getImageDataGrey8bits : getImageData8bits;\n\t\t\t\tbreak;\n\n\t\t\tcase 16:\n\t\t\t\tgetImageData = this.header.isGreyColor ? getImageDataGrey16bits : getImageData16bits;\n\t\t\t\tbreak;\n\n\t\t\tcase 24:\n\t\t\t\tgetImageData = getImageData24bits;\n\t\t\t\tbreak;\n\n\t\t\tcase 32:\n\t\t\t\tgetImageData = getImageData32bits;\n\t\t\t\tbreak;\n\t\t}\n\n\t\tgetImageData(imageData.data, this.imageData, this.palette, width, y_start, y_step, y_end, x_start, x_step, x_end);\n\t\treturn imageData;\n\t};\n\n\n\t/**\n\t * Return a canvas with the TGA render on it\n\t *\n\t * @returns {object} CanvasElement\n\t */\n\tTarga.prototype.getCanvas = function targaGetCanvas( canvas )\n\t{\n\t\tvar ctx, imageData;\n\n\t\tif (!canvas) {\n\t\t\tcanvas = document.createElement('canvas');\n\t\t}\n\t\tctx = canvas.getContext('2d');\n\t\timageData = ctx.createImageData(this.header.width, this.header.height);\n\n\t\tcanvas.width  = this.header.width;\n\t\tcanvas.height = this.header.height;\n\n\t\tctx.putImageData(this.getImageData(imageData), 0, 0);\n\n\t\treturn canvas;\n\t};\n\n\n\t/**\n\t * Return a dataURI of the TGA file\n\t *\n\t * @param {string} type - Optional image content-type to output (default: image/png)\n\t * @returns {string} url\n\t */\n\tTarga.prototype.getDataURL = function targaGetDatURL( type )\n\t{\n\t\treturn this.getCanvas().toDataURL(type || 'image/png');\n\t};\n\n\n\t// Find Context\n\tvar shim = {};\n\tif (typeof(exports) === 'undefined') {\n\t\t// if (typeof(define) === 'function' && typeof(define.amd) === 'object' && define.amd) {\n\t\t// \tdefine(function(){\n\t\t// \t\treturn Targa;\n\t\t// \t});\n\t\t// } else {\n\t\t\t// Browser\n\t\t\tshim.exports = typeof(window) !== 'undefined' ? window : _global;\n\t\t// }\n\t} \n\telse {\n\t\t// Commonjs\n\t\tshim.exports = exports;\n\t}\n\n\n\t// Export\n\tif (shim.exports) {\n\t\tshim.exports.TGA = Targa;\n\t}\n\n})(this);\n","import * as React from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { faAppleAlt, faTshirt, faHorse, faWeightHanging } from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport ObjectRecord from 'src/Models/ObjectRecord';\r\n\r\ninterface IObjectRecordListItemComponentProps {\r\n    objectRecord: ObjectRecord,\r\n    onSelected: (objectRecord: ObjectRecord) => void;\r\n}\r\n\r\nexport default class RecordListItem extends React.Component<IObjectRecordListItemComponentProps> {\r\n    private getClass = (active: boolean): string => `trait-icon trait-icon-${active ? \"active\" : \"inactive\"}`;\r\n\r\n    public render = () => {\r\n        library.add(faAppleAlt, faTshirt, faHorse, faWeightHanging);\r\n        return (\r\n            <tr onClick={() => this.props.onSelected(this.props.objectRecord)}>\r\n                <th scope=\"row\">{this.props.objectRecord.id}</th>\r\n                <td>{this.props.objectRecord.description}</td>\r\n                <td>{this.props.objectRecord.containable ? String(this.props.objectRecord.containSize) : \"\\u221e\"}</td>\r\n                <td>\r\n                    <FontAwesomeIcon icon=\"apple-alt\" title=\"Edible\" size=\"2x\" className={this.getClass(this.props.objectRecord.foodValue > 0)} />\r\n                    <FontAwesomeIcon icon=\"tshirt\" title=\"Equipable\" size=\"2x\" className={this.getClass(this.props.objectRecord.clothing !== 'n')} />\r\n                    <FontAwesomeIcon icon=\"horse\" title=\"Rideable\" size=\"2x\" className={this.getClass(this.props.objectRecord.rideable)} />\r\n                    <FontAwesomeIcon icon=\"weight-hanging\" title=\"Permanent\" size=\"2x\" className={this.getClass(this.props.objectRecord.permanent)} />\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport RecordListItem from './RecordListItem';\r\nimport ObjectRecord, { IObjectRecordContainer } from 'src/Models/ObjectRecord';\r\nimport { Table, Row } from 'reactstrap';\r\n\r\ninterface IObjectRecordListComponentProps {\r\n    objectRecord: IObjectRecordContainer;\r\n    onObjectSelected: (objectRecord: ObjectRecord) => void;\r\n}\r\n\r\nexport default class RecordList extends React.Component<IObjectRecordListComponentProps> {\r\n    public render = (): JSX.Element => (\r\n        <Row>\r\n            <Table striped dark hover>\r\n                <thead className=\"thead-dark\">\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Name</th>\r\n                        <th>Size</th>\r\n                        <th>Traits</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Object.values(this.props.objectRecord)\r\n                        .sort((lhs, rhs) => lhs.id - rhs.id)\r\n                        .map((objectRecord) => <RecordListItem key={objectRecord.id} onSelected={this.props.onObjectSelected}  objectRecord={objectRecord} />)}\r\n                </tbody>\r\n            </Table>\r\n        </Row>\r\n    );\r\n}","import * as React from 'react';\r\nimport { Col, Alert, Progress, Container, Row } from 'reactstrap';\r\n\r\nimport IProgressInfo from 'src/Models/IProgressInfo';\r\n\r\ninterface IDataLoadingComponent {\r\n    progress: IProgressInfo;\r\n}\r\n\r\nexport default class DataLoading extends React.Component<IDataLoadingComponent> {\r\n    private bgColor = (): string => this.props.progress.percent < 0 ? \"danger\" : \"info\";\r\n\r\n    private getProgress = (): number => (this.props.progress.percent < 0 ? 1 : this.props.progress.percent) * 100;\r\n\r\n    public render = (): JSX.Element => (\r\n        <Container>\r\n            <Row>\r\n                <Col className=\"data-loading\">\r\n                    <Alert color={this.bgColor()}>\r\n                        <p>{this.props.progress.message}</p>\r\n                        <Progress value={this.getProgress()} color={this.bgColor()} striped animated />\r\n                    </Alert>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import * as React from 'react';\r\n\r\ninterface INavbarComponentProps {\r\n    onSearch: (event: string) => void;\r\n}\r\n\r\nexport default class NavbarComponent extends React.Component<INavbarComponentProps> {\r\n    private onSearchSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n        event.preventDefault();\r\n        const data = new FormData(event.target as HTMLFormElement);\r\n        this.props.onSearch(data.get(\"filter\") as string);\r\n        this.setState((prevState) => ({\r\n            ...prevState,\r\n            filter: data.get(\"filter\") as string\r\n        }));\r\n    }\r\n\r\n    public render = () => {\r\n        return (\r\n            <nav className=\"navbar navbar-dark bg-dark fixed-top\">\r\n                <div className=\"container\">\r\n                    <a className=\"navbar-brand h1 text-light\" href=\"#\">One life item browser</a>\r\n                    <form className=\"form-inline d-none d-sm-block\" onSubmit={this.onSearchSubmit}>\r\n                        <input className=\"form-control mr-sm-2\" type=\"search\" name=\"filter\" placeholder=\"Search\" aria-label=\"Search\" />\r\n                        <button className=\"btn btn-outline-success my-2 my-sm-0\" type=\"submit\">Search</button>\r\n                    </form>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { Col, Pagination, PaginationItem, PaginationLink, Row } from 'reactstrap';\r\n\r\nexport interface IPageControlProps {\r\n    currentPage: number;\r\n    pageCount: number;\r\n    changePage: (newPage: number) => void;\r\n}\r\n\r\nexport default class PageControl extends React.Component<IPageControlProps> {\r\n\r\n    private isFirstPage = (): boolean => this.props.currentPage === 0;\r\n    private isSecondPage = (): boolean => this.props.currentPage === 1;\r\n    private isLastPage = (): boolean => this.props.currentPage === this.props.pageCount - 1;\r\n    private isSecondLastPage = (): boolean => this.props.currentPage === this.props.pageCount - 2;\r\n\r\n    private getMiddleNumber = (): number => this.isFirstPage() || this.isSecondPage() \r\n        ? 2 \r\n        : this.isLastPage() || this.isSecondLastPage() \r\n            ? this.props.pageCount - 3 \r\n            : this.props.currentPage;\r\n\r\n    private renderPage = (page: number): JSX.Element | null => page < this.props.pageCount ? (\r\n        <PaginationItem active={page === this.props.currentPage}>\r\n            <PaginationLink onClick={() => this.props.changePage(page)}>{page + 1}</PaginationLink>\r\n        </PaginationItem>\r\n    ) : null;\r\n\r\n    private renderDots = (): JSX.Element => (\r\n        <PaginationItem disabled>\r\n            <PaginationLink>...</PaginationLink>\r\n        </PaginationItem>\r\n    )\r\n\r\n    public render = (): JSX.Element => (\r\n        <Row className=\"justify-content-center\">\r\n            <Col xs=\"auto\">\r\n                <Pagination className=\"page-control\">\r\n                    <PaginationItem disabled={this.isFirstPage()}>\r\n                        <PaginationLink previous onClick={() => this.props.changePage(this.props.currentPage - 1)} />\r\n                    </PaginationItem>\r\n                    { this.props.currentPage > 2 && this.renderPage(0) }\r\n                    { this.props.currentPage > 3 && this.renderPage(1) }\r\n                    { this.props.currentPage > 3 && this.renderDots() }\r\n                    { this.renderPage(this.getMiddleNumber() - 2) }\r\n                    { this.renderPage(this.getMiddleNumber() - 1) }\r\n                    { this.renderPage(this.getMiddleNumber()) }\r\n                    { this.renderPage(this.getMiddleNumber() + 1) }\r\n                    { this.renderPage(this.getMiddleNumber() + 2) }\r\n                    { this.props.currentPage < this.props.pageCount - 4 && this.renderDots() }\r\n                    { this.props.currentPage < this.props.pageCount - 4 && this.renderPage(this.props.pageCount - 2) }\r\n                    { this.props.currentPage < this.props.pageCount - 3 && this.renderPage(this.props.pageCount - 1) }\r\n                    <PaginationItem disabled={this.isLastPage()}>\r\n                        <PaginationLink next onClick={() => this.props.changePage(this.props.currentPage + 1)} />\r\n                    </PaginationItem>\r\n                </Pagination>\r\n            </Col>\r\n        </Row>\r\n    );\r\n}","import * as $ from \"jquery\";\r\n\r\nimport IRecordsResponse from 'src/Models/IRecordResponse';\r\n\r\nexport default class Api {\r\n    private static readonly baseUrl: string = false//location.hostname === \"localhost\" \r\n    ? \"http://localhost:3000/api/\" : \"https://onelifeitembrowser.herokuapp.com/api/\";\r\n\r\n    public static getRecords = async (): Promise<IRecordsResponse> => {\r\n        return await $.get(Api.baseUrl + \"records\");\r\n    }\r\n}","import Api from 'src/Services/Api';\r\nimport { IObjectRecordContainer } from 'src/Models/ObjectRecord';\r\nimport IProgressInfo from 'src/Models/IProgressInfo';\r\n\r\nexport default class DataManagerService {\r\n    public static initialize = async (onProgress: (progress?: IProgressInfo) => void, done: (objectRecords: IObjectRecordContainer) => void): Promise<IObjectRecordContainer> => {\r\n        onProgress({\r\n            percent: 1,\r\n            message: \"Fetching records...\",\r\n        })\r\n        try {\r\n            var response = await Api.getRecords();\r\n\r\n            switch (response.outdated) {\r\n            case false:\r\n                onProgress(undefined);\r\n                return response.records;\r\n            case true:\r\n                onProgress(response.progress);\r\n                DataManagerService.waitForUpdate(onProgress, done);\r\n                return {};\r\n            }\r\n        } catch {\r\n            onProgress({\r\n                percent: -1,\r\n                message: \"Unexpected error occured. Please refresh the page.\"\r\n            })\r\n            return {};\r\n        }\r\n        return {};\r\n    }\r\n\r\n    private static sleep = async (ms: number) => new Promise(resolve => setTimeout(resolve, ms));\r\n\r\n    private static waitForUpdate = async (onProgress: (progress?: IProgressInfo) => void, done: (objectRecords: IObjectRecordContainer) => void) => {\r\n        try {\r\n            do {\r\n                await DataManagerService.sleep(3000);\r\n                var response = await Api.getRecords();\r\n    \r\n                switch (response.outdated) {\r\n                case false:\r\n                    onProgress(undefined);\r\n                    done(response.records);\r\n                    return;\r\n                case true:\r\n                    onProgress(response.progress);\r\n                }\r\n            } while (true);\r\n        } catch {\r\n            onProgress({\r\n                percent: -1,\r\n                message: \"Unexpected error occured. Please refresh the page.\"\r\n            })\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\n\r\ninterface IKeyValueComponentProps {\r\n    keyStr: string;\r\n    value: any;\r\n}\r\n\r\nexport default class KeyValue extends React.Component<IKeyValueComponentProps> {\r\n    public render = (): JSX.Element => (\r\n        <div>\r\n            <span className=\"font-weight-bold key-str\">\r\n                {this.props.keyStr}:\r\n            </span>\r\n            <span>\r\n                {JSON.stringify(this.props.value)}\r\n            </span>\r\n        </div>\r\n    );\r\n}","import * as $ from 'jquery';\r\n\r\nimport Sprite from 'src/Models/Sprite';\r\nimport Position from 'src/Models/Position';\r\n\r\nvar tgaLib = require(\"../Lib/tga\");\r\n\r\ninterface SpriteInfo {\r\n    sprite: Sprite;\r\n    canvas: HTMLCanvasElement;\r\n}\r\n\r\nexport default class SpriteRendererService {\r\n    private static imgUrl: string = \"https://raw.githubusercontent.com/jasonrohrer/OneLifeData7/master/sprites/\";\r\n\r\n    public static render = async (sprites: Sprite[], canvasId: string) => {\r\n        if (sprites.length === 0) {\r\n            return;\r\n        }\r\n        \r\n        const canvas = $(canvasId).get()[0] as HTMLCanvasElement;\r\n        canvas.width = 250;\r\n        canvas.height = 500;\r\n\r\n        const context = canvas.getContext(\"2d\") as CanvasRenderingContext2D;\r\n        var spritePromises = [];\r\n        for (var i = 0; i < sprites.length; ++i) {\r\n            spritePromises.push(SpriteRendererService.getCanvas(sprites[i]));\r\n        }\r\n\r\n        const spriteCanvases = await Promise.all(spritePromises);\r\n        const spriteInfos = spriteCanvases.map((canvas, index): SpriteInfo => ({ sprite: sprites[index], canvas}));\r\n        \r\n        for (var i = 0; i < sprites.length; ++i) {\r\n            SpriteRendererService.addSprite(i, spriteInfos, context);\r\n        }\r\n    }\r\n\r\n    private static getCanvas = async (sprite: Sprite): Promise<HTMLCanvasElement> => {\r\n        return await new Promise<HTMLCanvasElement>((resolve, reject) => {\r\n            var tga: any = new tgaLib.TGA();\r\n            tga.open(SpriteRendererService.imgUrl + sprite.id + \".tga\", () => {\r\n                resolve(tga.getCanvas($(\"#\" + sprite.id).get()[0]));\r\n            });\r\n        })\r\n        .catch(err => {throw err});\r\n    };\r\n\r\n    private static addSprite = async (index: number, sprites: SpriteInfo[], context: CanvasRenderingContext2D) => {\r\n        const { x, y } = SpriteRendererService.getPosition(sprites[index]);\r\n        context.drawImage(sprites[index].canvas, 125 + x, 400 - y);\r\n    }\r\n\r\n    private static getPosition = (sprite: SpriteInfo): Position => {\r\n        return {\r\n            x: sprite.sprite.position.x - sprite.canvas.width / 2,\r\n            y: sprite.sprite.position.y + sprite.canvas.height / 2,\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\n\r\nimport KeyValue from './KeyValue';\r\n\r\nimport SpriteRendererService from 'src/Services/SpriteRendererService';\r\n\r\nimport ObjectRecordModel from 'src/Models/ObjectRecord';\r\nimport Sprite from 'src/Models/Sprite';\r\n\r\n\r\ninterface IObjectRecordComponentProps {\r\n    objectRecord: ObjectRecordModel;\r\n    close: () => void;\r\n}\r\n\r\nexport default class ObjectRecord extends React.Component<IObjectRecordComponentProps> {\r\n    componentDidMount() {\r\n        SpriteRendererService.render(this.props.objectRecord.sprites, \"#\" + this.mainCanvasId());\r\n    }\r\n\r\n    private mainCanvasId = (): string => this.props.objectRecord.id.toString();\r\n\r\n    private renderSpriteInfo = (sprite: Sprite): JSX.Element => (\r\n        <Col xs=\"6\" md=\"4\" lg=\"3\" className=\"col-6 sprite-info\">\r\n            <div className=\"sprite-info-preview\">\r\n                <canvas id={sprite.toString()} className=\"sprite\" />\r\n            </div>\r\n            <KeyValue keyStr=\"Id\" value={sprite.id} />\r\n            <KeyValue keyStr=\"Parent\" value={sprite.parent} />\r\n            <KeyValue keyStr=\"Pos\" value={sprite.position} />\r\n        </Col>\r\n    );\r\n\r\n    public render = (): JSX.Element => (\r\n        <Container>\r\n            <Row>\r\n                <Col md=\"7\" lg=\"8\">\r\n                    <Row>\r\n                        <Button color=\"link\" onClick={this.props.close}>&lt; Back to listing</Button>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <h2>{this.props.objectRecord.description}</h2>\r\n                            <KeyValue keyStr=\"Id\" value={this.props.objectRecord.id} />\r\n                        </Col>\r\n                    </Row>\r\n                </Col>\r\n                <Col md=\"5\" lg=\"4\">\r\n                    <div className=\"sprite-preview\">\r\n                        <canvas id={this.mainCanvasId()} className=\"sprite\" />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                <Col>\r\n                    <h3>All sprites:</h3>\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {this.props.objectRecord.sprites.map(this.renderSpriteInfo)}\r\n            </Row>\r\n        </Container>\r\n    );\r\n}","import * as React from 'react';\nimport { Container } from 'reactstrap';\n\nimport RecordList from './RecordList';\nimport DataLoading from './DataLoading';\nimport NavbarComponent from './NavbarComponent';\nimport PageControl, { IPageControlProps } from './PageControl';\nimport DataManagerService from '../Services/DataManagerService';\nimport IProgressInfo from '../Models/IProgressInfo';\nimport ObjectRecord from './ObjectRecord';\n\nimport ObjectRecordModel, { IObjectRecordContainer } from '../Models/ObjectRecord';\n\ninterface IAppState {\n    objectRecords: IObjectRecordContainer;\n\n    selectedRecord?: number;\n\n    filter: string;\n    filteredCount: number;\n\n    itemsPerPage: number;\n    currentPage: number;\n\n    progress?: IProgressInfo;\n}\n\nexport default class App extends React.Component<{}, IAppState> {\n    public state: IAppState = {\n        objectRecords: {},\n        selectedRecord: undefined,\n        filter: \"\",\n        filteredCount: 0,\n        itemsPerPage: 25,\n        currentPage: 0,\n    };\n\n    componentDidMount = async () => {\n        const objectRecords = await DataManagerService.initialize(this.onLoadingProgress, this.onLoadingDone);\n        this.setState((prevState) => ({\n            ...prevState,\n            objectRecords,\n            filteredCount: Object.keys(objectRecords).length,\n        }));\n    }\n\n    private getFilteredObjects = (): ObjectRecordModel[] => Object.values(this.state.objectRecords)\n            .filter((object) => App.stringContains(object.description, this.state.filter))\n            .slice(this.state.currentPage * this.state.itemsPerPage, this.state.currentPage * this.state.itemsPerPage + this.state.itemsPerPage);\n\n    private getPageControlProps = (): IPageControlProps => ({\n        currentPage: this.state.currentPage,\n        pageCount: Math.ceil(this.state.filteredCount / this.state.itemsPerPage) - 1,\n        changePage: this.onChangePage,\n    });\n\n    private showLoading = (): boolean => this.state.progress !== undefined;\n\n    private static stringContains = (source: string, substr: string): boolean => source.toLowerCase().indexOf(substr.toLowerCase()) >= 0;\n\n    private onSearchSubmit = (filter: string) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            filter,\n            filteredCount: Object.values(prevState.objectRecords).filter((object) => App.stringContains(object.description, filter)).length,\n        }));\n    }\n\n    private onChangePage = (newPage: number) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            currentPage: newPage,\n        }));\n    }\n\n    private onLoadingProgress = (progress?: IProgressInfo) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            progress,\n        }));\n    }\n\n    private onLoadingDone = (objectRecords: IObjectRecordContainer) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            objectRecords,\n            filteredCount: Object.keys(objectRecords).length,\n        }));\n    }\n\n    private onObjectSelected = (objectRecord: ObjectRecordModel) => {\n        this.setState((prevState) => ({\n            ...prevState,\n            selectedRecord: objectRecord.id,\n        }));\n    }\n\n    private onObjectClosed = () => {\n        this.setState((prevState) => ({\n            ...prevState,\n            selectedRecord: undefined,\n        }));\n    }\n\n    private renderTabel = (): JSX.Element => (\n        <Container>\n            <RecordList objectRecord={this.getFilteredObjects()} onObjectSelected={this.onObjectSelected} />\n            { this.state.filteredCount > this.state.itemsPerPage && <PageControl { ...this.getPageControlProps() } /> }\n        </Container>\n    )\n\n    private renderObjectRecord = (): JSX.Element => (\n        <ObjectRecord objectRecord={this.state.objectRecords[this.state.selectedRecord!]} close={this.onObjectClosed} />\n    )\n\n    public render = (): JSX.Element => (\n        <div>\n            <NavbarComponent onSearch={this.onSearchSubmit}/>\n            <main role=\"main\">\n                { this.showLoading() && <DataLoading progress={this.state.progress!} /> }\n                { this.state.selectedRecord ? this.renderObjectRecord() : this.renderTabel() }\n            </main>\n        </div>\n    );\n}\n","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log('New content is available; please refresh.');\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log('Content is cached for offline use.');\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type')!.indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nimport './index.scss';\nimport App from './Components/App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}